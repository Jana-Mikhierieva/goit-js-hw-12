import{a as g,S as b,i}from"./assets/vendor-CRwkH7JT.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const p of r.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&o(p)}).observe(document,{childList:!0,subtree:!0});function a(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=a(e);fetch(e.href,r)}})();g.defaults.baseURL="https://pixabay.com";const y=(t,s)=>{const a={params:{q:t,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:s,key:"45504583-80571ec5a383edfe03322cd8c"}};return g.get("/api/",a)},f=t=>`
    <li class="gallery-card">
        <a class="gallery-link" href="${t.largeImageURL}">
            <img class="gallery-img" src="${t.webformatURL}" alt="${t.tags}" />
        </a>
        <div class="image-info">
            <p class="img-descr"><span class="text-descr">Likes</span><span class="quantity-descr">${t.likes}</span></p>
            <p class="img-descr"><span class="text-descr">Views</span><span class="quantity-descr">${t.views}</span></p>
            <p class="img-descr"><span class="text-descr">Comments</span><span class="quantity-descr">${t.comments}</span></p>
            <p class="img-descr"><span class="text-descr">Downloads</span><span class="quantity-descr">${t.downloads}</span></p>
        </div>
        </li>`,u=document.querySelector(".js-search-form"),n=document.querySelector(".js-gallery"),l=document.querySelector(".js-load-more");let d=1,c="",L=0;const x=new b(".js-gallery a",{captionsData:"alt",captionDelay:250,captions:!0,animationSpeed:300,close:!0}),m=document.querySelector(".loader"),h=document.querySelector(".loader-more"),v=async t=>{try{if(t.preventDefault(),n.innerHTML="",c=u.elements.user_query.value.trim(),l.classList.add("is-hidden"),d=1,!c){i.error({title:"Error",message:"Please fill in the field!",position:"topRight",maxWidth:"400px",backgroundColor:"#daff00"});return}m.classList.remove("is-hidden");const s=await y(c,d);if(s.data.hits.length===0){i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",maxWidth:"400px",backgroundColor:"#daff00"});return}const a=s.data.hits.map(e=>f(e)).join("");n.innerHTML=a,L=n.querySelector("li").getBoundingClientRect().height,l.classList.remove("is-hidden"),x.refresh()}catch(s){console.error(s),i.error({title:"Error",message:"Oops! Error! Try again later!",position:"topRight",maxWidth:"400px",backgroundColor:"#daff00"})}finally{u.reset(),m.classList.add("is-hidden")}},q=async t=>{try{d++,h.classList.remove("is-hidden");const s=await y(c,d),a=s.data.hits.map(o=>f(o)).join("");n.insertAdjacentHTML("beforeend",a),scrollBy({top:L*2,behavior:"smooth"}),s.data.hits.length===0&&(l.classList.add("is-hidden"),i.info({title:"Hello!",message:"We are sorry, but you have reached the end of search results!",position:"topRight",maxWidth:"400px",backgroundColor:"#daff00"}))}catch(s){console.error(s)}finally{h.classList.add("is-hidden")}};u.addEventListener("submit",v);l.addEventListener("click",q);
//# sourceMappingURL=index.js.map
